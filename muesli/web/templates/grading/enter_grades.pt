<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<metal:main metal:use-macro="templates('Fragments/main.pt').macros['main']">
  <metal:main metal:fill-slot="content">


<script>/* <![CDATA[ */
  function hide_help ()
  {
    $(".help").hide();
    $(".nohelp").show();
  }
  function show_help ()
  {
    $(".help").show();
    $(".nohelp").hide();
  }
    /*
     * fancybox
     */
    function closeFancyBox() {
      var student = $(this).attr('href').split('students=')[1]
      var url = $('#gradingsform').attr('action').replace(/enter_grades/, 'get_row');
      $.ajax({
        url: url,
        data: {'student': student},
        success: function(data, textStatus, jqXHR) {
            //console.log(student)
            var real_data = data["grades"][student];
            //for (var i = 0; i < real_data["exams"].length; i++) {
            //}
            for (var exam_id in real_data["exams"]) {
              $("#exampoints-"+student+"-"+exam_id).text(real_data["exams"][exam_id]["points"]);
            }
            $("#calc-"+student).text(real_data["calc"]);
            $("#grade-"+student).value(real_data["gradestr"]);
            console.log(real_data);
          }
      });
    }
    function createFancyBoxes(){
        $("a.fancybox").each(function(index) {
          $(this).fancybox({
            'transitionIn'  :   'elastic',
            'transitionOut' :   'elastic',
            'speedIn'       :   600,
            'speedOut'      :   200,
            'overlayShow'   :   true,
            'scrolling'     :   'no',
            'showNavArrows' :   false,
            'onClosed'      :   closeFancyBox
          });
       });
    }
    function saveRow(event,id){
      var url = $('#gradingsform').attr('action').replace(/enter_grades/, 'get_row');
      var value= $('#grade-'+id).val()
      var key='grade-'+id
      var data = {'student': id};
      data[key] = value;
      $('#msg-'+id).text('Speichern...');
      $.ajax({
        url: url,
        type: "POST",
        data: data,
        error: function(jqXHR, textStatus, errorThrown){
          alert(textStatus);
        },
        success: function(data, textStatus, jqXHR) {
            console.log(data)
            $('#msg-'+id).text('Gespeichert');
          }
      });
    }
    $(document).ready(function() {
        createFancyBoxes();
    });
/* ]]> */
</script>

<h2>Noten eintragen</h2>

<h3>Benotung "${grading.name}" der Vorlesung ${grading.lecture.name}</h3>

<p tal:condition="error_msg" class="alert alert-danger">${error_msg}</p>


<a tal:attributes="href request.route_path('grading_export', grading_id=grading.id)">
    Als Excel für die Prüfungsverwaltung (HIS-POS) exportieren
    <div class="tooltip_questionmark">
        <p>
            ${tooltips['excel']}
        </p>
    </div>
</a>


<form method="get">
  Berechnungsformel <input type="text" name="formula" size="80" tal:attributes="value formula" />
  <input class="btn btn-primary" type="submit" value="Berechnen"/> <input class="btn btn-success" type="submit" name="fill" value="Berechnen &amp; übertragen"/>
  <a class="nohelp" href="javascript:show_help()">Hilfe</a><a class="help" style="display:none" href="javascript:hide_help()">Hilfe verbergen</a>
</form>
<div class="help" style="display:none"><p>
Die Formel muss ein algebraischer Ausdruck in den Variablen $0, $1, ... sein, wobei $<span>i</span> für
die erreichten Punktzahlen in den gewählten Testaten steht (Siehe Kopfzeile der Tabelle unten).
Desweiteren können folgende Funktionen benutzt werden:
</p>
<ul>
<li>max(a, b, ...): Liefert das Maximum der Ausdrücke a, b, ...</li>
<li>min(a, b, ...): Liefert das Minimum der Ausdrücke a, b, ...</li>
<li>cases(val,r<sub>0</sub>, b<sub>1</sub>, r<sub>1</sub>, ..., b<sub>n</sub>, r<sub>n</sub>):
Liefert r<sub>0</sub> falls val &lt; b<sub>1</sub> und r<sub>i</sub> falls val &ge; b<sub>i</sub>.
  <ul>
    <li>Für ganze Noten: cases1(val, b<sub>1</sub>, ..., b<sub>4</sub>): Liefert Note 5, falls val &lt; b<sub>1</sub>;
        Note 4, falls val &lt; b<sub>2</sub> etc. </li>
    <li>Für halbe Noten: cases2(val, b<sub>1</sub>, ..., b<sub>7</sub>): Liefert Note 5, falls val &lt; b<sub>1</sub>;
        Note 4, falls val &lt; b<sub>2</sub>; Note 3.5, falls val &lt; b<sub>3</sub>, etc. </li>
    <li>Für drittel Noten: cases3(val, b<sub>1</sub>, ..., b<sub>10</sub>): Liefert Note 5, falls val &lt; b<sub>1</sub>;
        Note 4, falls val &lt; b<sub>2</sub>; Note 3.7, falls val &lt; b<sub>3</sub>, etc. </li>
    <li>Für echte drittel Noten: cases333(val, b<sub>1</sub>, ..., b<sub>10</sub>): Liefert Note 5, falls val &lt; b<sub>1</sub>;
        Note 4, falls val &lt; b<sub>2</sub>; Note 3 2/3, falls val &lt; b<sub>3</sub>, etc. Diese Funktion ist
        vor allem für Fälle gedacht, in denen Durchschnitte von Noten berechnet werden müssen.</li>  </ul>
</li>
<li>round3down(val): Rundet den Wert von val auf den nächst kleineren Drittelnotenschritt ab, falls val &leq; 4.
  Andernfalls wird eine 5 zurückgegeben. Achtung: Die Funktion rechnet mit echten Drittelnoten, es gibt
  also erst ab 1.333... eine 1.3 etc.</li>
</ul>
</div>

<form class="form-inline pt-3" method="get">
  <select class="custom-select mr-2" name="students">
    <option value="">Alle</option>
    <option tal:repeat="exam grading.exams" tal:attributes="selected str(exam.id)==exam_id; value exam.id">${exam.name}</option>
  </select>
  <input class="btn btn-primary" type="submit" value="Anzeigen"/>
</form>

    <p>Durch Klicken auf die Punktzahl eines Testates, kann diese bearbeitet werden.</p>

<form class="pt-3" id="gradingsform" method="post" tal:attributes="action request.route_path('grading_enter_grades', grading_id=grading.id)">
  <input type="hidden" name="submit" value="1" />
  <table class="table">
    <thead class="thead-dark">
      <th scope="col" tal:condition="not tutorial_ids">Tutor</th>
      <th scope="col" tal:repeat="exam grading.exams">${exam.name} (${varsForExam[exam.id]})</th>
      <th scope="col">Name</th>
      <th scope="col">Berechnete Note</th>
      <th scope="col">Note</th>
      <th scope="col"></th>
    </thead>
    <tbody>
      <tr tal:repeat="ls lecture_students"
          tal:attributes="id 'row-%i' % ls.student_id">
        <td tal:condition="not tutorial_ids">
          <span tal:condition="ls.tutorial.tutor" tal:content="ls.tutorial.tutor.last_name" tal:omit-tag="" />
        </td>
        <td tal:repeat="exam grading.exams">
          <span tal:define="exam_points grades[ls.student_id]['exams'][exam.id]">
            <metal:main metal:use-macro="templates('Fragments/Format/exam_points.pt').macros['exam_points']" />
          </span>
        </td>
        <td>${ls.student.name}</td>
        <td>
          <span id="calc-${ls.student_id}">${grades[ls.student_id]['calc']}</span>
        </td>

        <td>
          <input tal:attributes="class 'invalid' if grades[ls.student_id]['invalid'] else 'points';
                 name 'grade-%i' % ls.student_id;
                 value grades[ls.student_id]['gradestr'];
                 id 'grade-%i' % ls.student_id;" size="4"/></td>
        <td>
          <input class="btn btn-primary" type="button" onclick="saveRow(event,${ls.student_id})" value="Speichern"/>
          <span id="msg-${ls.student_id}" \>
        </td>
      </tr>
    </tbody>
  </table>
  <input class="btn btn-primary" type="submit" value="Speichern"/>
</form>

<h3 tal:condition="formula">Notenvorschau für berechnete Noten</h3>

<p tal:condition="formula">Dieses Histogramm bezieht sich auf aus der Formel <b>berechnete</b> Noten. Sie bezieht sich nicht auf übertragene
oder gespeicherte Noten!</p>

<img tal:condition="formula" tal:attributes="src request.route_path('grading_formula_histogram', grading_id=grading.id)"/>

  </metal:main>
</metal:main>
